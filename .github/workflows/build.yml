name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:

  Windows:
    strategy:
      fail-fast: false

    runs-on: windows-latest
    continue-on-error: true

    timeout-minutes: 9999

    steps:
    - name: Download files.
      run: |
        Invoke-WebRequest https://github.com/r3xzt/GitHub-Action-RDP/raw/main/Windows/ngrok.exe -OutFile ngrok.exe
        Invoke-WebRequest https://github.com/r3xzt/GitHub-Action-RDP/raw/main/Windows/NGROK-AP.bat -OutFile NGROK-AP.bat
        Invoke-WebRequest https://github.com/r3xzt/GitHub-Action-RDP/raw/main/Windows/user-create.bat -OutFile user-create.bat
        Invoke-WebRequest https://github.com/r3xzt/GitHub-Action-RDP/raw/main/Windows/info.bat -OutFile info.bat
        Invoke-WebRequest https://github.com/r3xzt/GitHub-Action-RDP/raw/main/Windows/loop.bat -OutFile loop.bat
    - name: Connect your NGROK account.
      run: | 
        .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable RDP Access.
      run: | 
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - name: Create Tunnel.
      run: Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389 -region ${{ secrets.NGROK_REGION }}"
    - name: Create user account.
      run: cmd /c user-create.bat
    - name: VM Info.
      run: cmd /c info.bat
    
    - run: git config --global core.autocrlf input
      shell: bash
    
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: |
          git
          wget
          mingw-w64-x86_64-toolchain

    - name: Install Vulkan SDK
      shell: msys2 {0}
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.216.0/windows/VulkanSDK-1.3.216.0-Installer.exe
        ./VulkanSDK-1.3.216.0-Installer.exe --accept-licenses --default-answer --confirm-command install

    - name: Build
      shell: msys2 {0}
      if: success() || failure()
      run: |
        cd msys2
        VULKAN_SDK=C:/VulkanSDK/1.3.216.0 MINGW_ARCH=mingw64 makepkg-mingw -sCLfc --noconfirm --noprogressbar

    - name: Install
      shell: msys2 {0}
      if: success() || failure()
      run: |
        pacman --noconfirm -U msys2/*.zst

    - name: Debugging
      shell: msys2 {0}
      if: success() || failure()
      run: |
        export
        echo ls -----------
        ls /mingw64/bin
        echo ldd ---------------
        ldd /mingw64/bin/glscopeclient.exe


    - name: Debugging 2
      if: success() || failure()
      shell: msys2 {0}
      continue-on-error: true
      run: |
        glscopeclient.exe --help 

    - name: Screenshot
      if: success() || failure()
      uses: OrbitalOwen/desktop-screenshot-action@0.1
      with:
        file-name: 'desktop.jpg'

    - name: Debugging 3
      shell: msys2 {0}
      if: success() || failure()
      run: |
        'glscopeclient --help 2>&1 | tee gl2.log'
        'glscopeclient.exe 2>&1 | tee gl3.log'

    - name: Upload Artifacts (logs 1)
      if: success() || failure()
      uses: actions/upload-artifact@v2
      with:
        name: glscopeclient-windows-logs
        path: ./*.log

        
    - name: Keep your VM alive.
      run: cmd /c loop.bat

    - name: Build MSI / portable zip
      run: |
        mkdir build_msi
        cd build_msi
        VULKAN_SDK=C:/VulkanSDK/1.3.216.0 cmake \
          -G"Ninja" \
          -DBUILD_TESTING=OFF \
          -DWIXPATH="/c/Program Files (x86)/WiX Toolset v3.11/bin" \
          ../
        VULKAN_SDK=C:/VulkanSDK/1.3.216.0 cmake --build ./


    - name: Upload Artifacts (logs 2)
      uses: actions/upload-artifact@v2
      with:
        name: logs
        path: ./*.log

    - name: Upload Artifacts (portable zip)
      uses: actions/upload-artifact@v2
      with:
        name: glscopeclient-windows-portable
        path: build_msi/dist/windows_x64

    - name: Upload Artifacts (MSI)
      uses: actions/upload-artifact@v2
      with:
        name: glscopeclient-windows.msi
        path: build_msi/dist/*.msi
